name: node-hapi (Dev & Prod)
on:
    push:
        branches:
            - dev
            - main
jobs:
    # docker-build-push-deploy:
    #   name: Docker build, push and deploy
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #     - name: Get branch name
    #       id: vars
    #       run: echo ::set-output name=stage::${GITHUB_REF#refs/*/}
    #     - name: Set env.ENV_NAME
    #       run: |
    #         if [[ ${{steps.vars.outputs.stage}} == 'main' ]]; then
    #             echo "ENV_NAME=prod" >> "$GITHUB_ENV"
    #         else
    #             echo "ENV_NAME=dev" >> "$GITHUB_ENV"
    #         fi
    #     - name: Install dependencies
    #       run: yarn

    #     - name: Configure AWS credentials
    #       uses: aws-actions/configure-aws-credentials@v1
    #       with:
    #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #         aws-region: ${{ secrets.AWS_REGION }}
    #     - name: Login to Amazon ECR
    #       id: login-ecr
    #       uses: aws-actions/amazon-ecr-login@v1
    #     - name: Build, tag, and push image to Amazon ECR
    #       env:
    #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #         ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}-${{ env.ENV_NAME }}
    #         AWS_REGION: ${{ secrets.AWS_REGION }}
    #         IMAGE_TAG: ${{ github.sha }}
    #       run: |
    #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     - name: Render Amazon ECS task definition
    #       id: node-hapi-container
    #       uses: aws-actions/amazon-ecs-render-task-definition@v1
    #       with:
    #         task-definition: task-definition/${{ env.ENV_NAME }}.json
    #         container-name: node-hapi-${{ env.ENV_NAME }}
    #         image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}-${{ env.ENV_NAME }}:${{ github.sha }}
    #     - name: Deploy to Amazon ECS service
    #       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #       with:
    #         task-definition: ${{ steps.node-hapi-container.outputs.task-definition }}
    #         service: node-hapi-${{ env.ENV_NAME }}
    #         cluster: node-hapi-${{ env.ENV_NAME }}
    #     - name: Logout of Amazon ECR
    #       if: always()
    #       run: docker logout ${{ steps.login-ecr.outputs.registry }}
    create_badges:
        name: Create Badges
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - uses: actions/checkout@v2
            - name: Setup environment
              uses: actions/setup-node@v2
              with:
                  cache: 'yarn'
                  node-version: ${{ matrix.node-version }}
            - name: Set branch name
              id: vars
              run: echo ::set-output name=stage::${GITHUB_REF#refs/*/}
            - name: Install dependencies
              run: yarn install
            - name: Create badges
              run: yarn run test:badges
            - name: Commit badges
              uses: EndBug/add-and-commit@v7
              with:
                  author_name: Gitflow
                  author_email: git@wednesday.is
                  message: 'Update badges'
                  add: 'badges/'
                  push: false
            - name: Pushing to a protected branch
              uses: CasperWA/push-protected@v2
              with:
                  token: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}
                  branch: ${{ steps.vars.outputs.stage }}
                  unprotect_reviews: true
